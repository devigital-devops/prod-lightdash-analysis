name: Deploy Workflow

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install Node.js and npm
      run: |
        curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
        sudo apt-get install -y nodejs

    - name: Install Lightdash CLI
      run: |
        npm install -g @lightdash/cli@latest
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dbt-core
        pip install dbt-postgres

    - name: Check Node.js version
      run: node --version
      
    - name: Set up SSH tunnel
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh -o StrictHostKeyChecking=no -fN -L 5433:high-rewards-aurora-postgresql-reader.cjy248yiebxq.us-east-1.rds.amazonaws.com:5432 ubuntu@52.87.194.221

    - name: Verify SSH Tunnel
      run: |
        # Wait for the tunnel to establish
        sleep 10
        # Check if the port is listening
        nc -zv localhost 5433 || echo "Failed to connect to SSH tunnel"
    - name: Debug Secrets
      run: echo "DB_PASSWORD"=${{ env.DB_PASSWORD }}
      
    - name: Set up dbt profile
      run: |
        mkdir -p ~/.dbt
        echo "highreward_dev_database:
          target: dev
          outputs:
            dev:
              type: postgres
              host: localhost
              user: root
              password: \"${{ env.DB_PASSWORD }}\"
              port: 5433
              dbname: dev_high_rewards
              schema: dbt
              sslmode: disable
            prod:
              type: postgres
              host: localhost
              user: root
              password: \"${{ env.DB_PASSWORD }}\"
              port: 5433
              dbname: high_rewards
              schema: dbt
              sslmode: disable" > ~/.dbt/profiles.yml

    - name: Run dbt with prod target
      run:  dbt run --target prod
 
    - name: Lightdash Login
      run: lightdash login https://app.lightdash.cloud --token "${{ secrets.LIGHTDASH_TOKEN }}"

    - name: Verify SSH Tunnel
      run: |
        sleep 10
        nc -zv localhost 5433 || echo "Failed to connect to SSH tunnel"
      
    - name: Run lightdash with prod target
      run: lightdash generate -y --target prod

    - name: Deploy Lightdash
      run: lightdash deploy --target prod
